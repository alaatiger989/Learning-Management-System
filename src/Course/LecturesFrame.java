/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Course;

import User.ProfUserControls;
import User.SelectedUserModel;
import User.UserModel;
import User.UserPrivilegesModel;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alaa_Sayed
 */
public class LecturesFrame extends javax.swing.JFrame {

    /**
     * Creates new form LecturesFrame
     */
    DefaultTableModel model ;
    private String lectureName;
    private String day;
    private String time;
    private String place;
    public LecturesFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Learning Management System");
        Image img = (new ImageIcon(getClass().getResource("logo2.png"))).getImage();
        setIconImage(img);
        jLabel2.setText("Welcome " + UserModel.getFirstName() + " " + UserModel.getLastName());
        model = (DefaultTableModel) jTable1.getModel();
        model.addColumn("Lecture Name");
        model.addColumn("Course Name");
        model.addColumn("Day");
        model.addColumn("Time");
        model.addColumn("Lecture Place");
        
        
        
        jLabel9.setVisible(false);// lec Name
        jLabel6.setVisible(false);// day
        jLabel7.setVisible(false);// time
        jLabel8.setVisible(false);// lecture place
        jTextField1.setVisible(false);
        jTextField2.setVisible(false);
        jTextField3.setVisible(false);
        jTextField4.setVisible(false);
        jButton3.setVisible(false); // add lec
        jButton1.setVisible(false); // update lec.
        jButton2.setVisible(false); // delete lec
        getLectures();
        initPrivileges();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Lectures Management");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Course/logo2.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 20, -1, 90));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Learning Management System");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Day");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Time");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Lecture Place");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Lecture Name");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 180, -1));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 180, -1));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 180, -1));
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, 180, -1));

        jButton1.setBackground(new java.awt.Color(0, 51, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(240, 240, 240));
        jButton1.setText("Update Lecture");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, -1, -1));

        jButton2.setBackground(new java.awt.Color(0, 51, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(240, 240, 240));
        jButton2.setText("Delete Lecture");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 550, -1, -1));

        jButton3.setBackground(new java.awt.Color(0, 51, 153));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(240, 240, 240));
        jButton3.setText("Add Lecture");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 550, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(592, 131, 980, 660));

        jButton5.setBackground(new java.awt.Color(0, 51, 153));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(240, 240, 240));
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 740, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/main_background.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1570, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            new ProfUserControls().updateLecture(jTextField1.getText(), SelectedCourseModel.getCourseName(), jTextField2.getText(), jTextField3.getText(), jTextField4.getText(), SelectedCourseModel.getProfName(), lectureName);
            deleteRows();
            getLectures();
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Select Which Lecture from Table....");
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        initializeTextFields();
    }//GEN-LAST:event_jTable1MouseReleased

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        // TODO add your handling code here:
        initializeTextFields();
    }//GEN-LAST:event_jTable1KeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() != -1) {
            new ProfUserControls().deleteLecture(lectureName);
            deleteRows();
            getLectures();
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Select Which Lecture from Table....");
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        dispose();
        new CoursesManagement().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(jTextField1.getText().length() > 0)
        {
            new ProfUserControls().addLecture(jTextField1.getText(), SelectedCourseModel.getCourseName(), jTextField2.getText(), jTextField3.getText(), jTextField4.getText(), SelectedCourseModel.getProfName());
            deleteRows();
            getLectures();
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Lecture Name is Required , Please Fill it Uniquely");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LecturesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LecturesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LecturesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LecturesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LecturesFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    private void getLectures() {
        Connection myConnObj = null;
        Statement myStatObj = null;
        ResultSet myResObj = null;

        String query = "Select * from lectures where course_name = '"+SelectedCourseModel.getCourseName()+"' AND prof_name = '"+SelectedCourseModel.getProfName()+"'";
        try {
            myConnObj = DriverManager.getConnection("jdbc:mysql://localhost:3306/learning_management_system", "root", "1234");
            myStatObj = myConnObj.createStatement();
            myResObj = myStatObj.executeQuery(query);
            while (myResObj.next()) {
                String lecName = myResObj.getString("name");
                String courseName = myResObj.getString("course_name");
                String day = myResObj.getString("day");
                String time = myResObj.getString("time");
                String place = myResObj.getString("place");
                
                model.addRow(new Object[]{lecName , courseName , day , time , place});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void deleteRows() {
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    private void initializeTextFields() {
        getLastUpdatesOnPrivileges();
    
        int modelRow = jTable1.convertRowIndexToModel(jTable1.getSelectedRow());
        lectureName = model.getValueAt(modelRow, 0).toString();
        day = model.getValueAt(modelRow, 2).toString();
        time = model.getValueAt(modelRow, 3).toString();
        place = model.getValueAt(modelRow, 4).toString();
        
        jTextField1.setText(lectureName);
        jTextField2.setText(day);
        jTextField3.setText(time);
        jTextField4.setText(place);
        
    }

    private void initPrivileges() {
        
        getLastUpdatesOnPrivileges();
        if(UserPrivilegesModel.isAddLecture())
        {
            jLabel9.setVisible(UserPrivilegesModel.isAddLecture());// lec Name
            jLabel6.setVisible(UserPrivilegesModel.isAddLecture());// day
            jLabel7.setVisible(UserPrivilegesModel.isAddLecture());// time
            jLabel8.setVisible(UserPrivilegesModel.isAddLecture());// lecture place
            jTextField1.setVisible(UserPrivilegesModel.isAddLecture());
            jTextField2.setVisible(UserPrivilegesModel.isAddLecture());
            jTextField3.setVisible(UserPrivilegesModel.isAddLecture());
            jTextField4.setVisible(UserPrivilegesModel.isAddLecture());
            jButton3.setVisible(UserPrivilegesModel.isAddLecture()); // add lec
            jButton1.setVisible(UserPrivilegesModel.isUpdateLecture()); // update lec.
            jButton2.setVisible(UserPrivilegesModel.isDeleteLecture()); // delete lec
            
        }
        if(UserPrivilegesModel.isUpdateLecture())
        {
            jLabel9.setVisible(UserPrivilegesModel.isUpdateLecture());// lec Name
            jLabel6.setVisible(UserPrivilegesModel.isUpdateLecture());// day
            jLabel7.setVisible(UserPrivilegesModel.isUpdateLecture());// time
            jLabel8.setVisible(UserPrivilegesModel.isUpdateLecture());// lecture place
            jTextField1.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField2.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField3.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField4.setVisible(UserPrivilegesModel.isUpdateLecture());
            jButton3.setVisible(UserPrivilegesModel.isAddLecture()); // add lec
            jButton1.setVisible(UserPrivilegesModel.isUpdateLecture()); // update lec.
            jButton2.setVisible(UserPrivilegesModel.isDeleteLecture()); // delete lec
        }
        if(UserPrivilegesModel.isDeleteLecture())
        {
            jLabel9.setVisible(UserPrivilegesModel.isUpdateLecture());// lec Name
            jLabel6.setVisible(UserPrivilegesModel.isUpdateLecture());// day
            jLabel7.setVisible(UserPrivilegesModel.isUpdateLecture());// time
            jLabel8.setVisible(UserPrivilegesModel.isUpdateLecture());// lecture place
            jTextField1.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField2.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField3.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField4.setVisible(UserPrivilegesModel.isUpdateLecture());
            jButton3.setVisible(UserPrivilegesModel.isAddLecture()); // add lec
            jButton1.setVisible(UserPrivilegesModel.isUpdateLecture()); // update lec.
            jButton2.setVisible(UserPrivilegesModel.isDeleteLecture()); // delete lec
        }
        if(UserPrivilegesModel.isAddLecture() && UserPrivilegesModel.isDeleteLecture())
        {
            jLabel9.setVisible(UserPrivilegesModel.isAddLecture());// lec Name
            jLabel6.setVisible(UserPrivilegesModel.isAddLecture());// day
            jLabel7.setVisible(UserPrivilegesModel.isAddLecture());// time
            jLabel8.setVisible(UserPrivilegesModel.isAddLecture());// lecture place
            jTextField1.setVisible(UserPrivilegesModel.isAddLecture());
            jTextField2.setVisible(UserPrivilegesModel.isAddLecture());
            jTextField3.setVisible(UserPrivilegesModel.isAddLecture());
            jTextField4.setVisible(UserPrivilegesModel.isAddLecture());
            jButton3.setVisible(UserPrivilegesModel.isAddLecture()); // add lec
            jButton1.setVisible(UserPrivilegesModel.isUpdateLecture()); // update lec.
            jButton2.setVisible(UserPrivilegesModel.isDeleteLecture()); // delete lec
        }
        if(UserPrivilegesModel.isUpdateLecture() && UserPrivilegesModel.isDeleteLecture())
        {
            jLabel9.setVisible(UserPrivilegesModel.isUpdateLecture());// lec Name
            jLabel6.setVisible(UserPrivilegesModel.isUpdateLecture());// day
            jLabel7.setVisible(UserPrivilegesModel.isUpdateLecture());// time
            jLabel8.setVisible(UserPrivilegesModel.isUpdateLecture());// lecture place
            jTextField1.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField2.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField3.setVisible(UserPrivilegesModel.isUpdateLecture());
            jTextField4.setVisible(UserPrivilegesModel.isUpdateLecture());
            jButton3.setVisible(UserPrivilegesModel.isAddLecture()); // add lec
            jButton1.setVisible(UserPrivilegesModel.isUpdateLecture()); // update lec.
            jButton2.setVisible(UserPrivilegesModel.isDeleteLecture()); // delete lec
        }
        
        
    }
    private void getLastUpdatesOnPrivileges() {
        Connection myConnObj = null;
        Statement myStatObj = null;
        ResultSet myResObj = null;

        String query = "Select * from user where username = '"+UserModel.getUsername()+"'";
        try {
            myConnObj = DriverManager.getConnection("jdbc:mysql://localhost:3306/learning_management_system", "root", "1234");
            myStatObj = myConnObj.createStatement();
            myResObj = myStatObj.executeQuery(query);
            while (myResObj.next()) {
                boolean viewLectures = Boolean.parseBoolean(myResObj.getString("view_lectures"));
                boolean addLecture = Boolean.parseBoolean(myResObj.getString("add_lecture"));
                boolean updateLecture = Boolean.parseBoolean(myResObj.getString("update_lecture"));
                boolean deleteLecture = Boolean.parseBoolean(myResObj.getString("delete_lecture"));
                boolean addAssignment = Boolean.parseBoolean(myResObj.getString("add_assignment"));
                boolean updateAssignment = Boolean.parseBoolean(myResObj.getString("update_assignment"));
                boolean deleteAssignment = Boolean.parseBoolean(myResObj.getString("delete_assignment"));
                boolean addExam = Boolean.parseBoolean(myResObj.getString("add_exam"));
                boolean updateExam = Boolean.parseBoolean(myResObj.getString("update_exam"));
                boolean deleteExam = Boolean.parseBoolean(myResObj.getString("delete_exam"));
                boolean registerCourses = Boolean.parseBoolean(myResObj.getString("register_courses"));
                boolean assignStudentsToExam = Boolean.parseBoolean(myResObj.getString("assign_students_to_exam"));
                boolean correctExams = Boolean.parseBoolean(myResObj.getString("correct_exams"));
                boolean generateResults = Boolean.parseBoolean(myResObj.getString("generate_results"));
                boolean addCourse = Boolean.parseBoolean(myResObj.getString("add_course"));
                boolean updateCourse = Boolean.parseBoolean(myResObj.getString("update_course"));
                boolean deleteCourse = Boolean.parseBoolean(myResObj.getString("delete_course"));
                
                
                UserPrivilegesModel.setAddAssignment(addAssignment);
                UserPrivilegesModel.setAddCourse(addCourse);
                UserPrivilegesModel.setAddExam(addExam);
                UserPrivilegesModel.setAddLecture(addLecture);
                UserPrivilegesModel.setAssignStudentsToExam(assignStudentsToExam);
                UserPrivilegesModel.setCorrectExams(correctExams);
                UserPrivilegesModel.setDeleteAssignment(deleteAssignment);
                UserPrivilegesModel.setDeleteCourse(deleteCourse);
                UserPrivilegesModel.setDeleteExam(deleteExam);
                UserPrivilegesModel.setDeleteLecture(deleteLecture);
                UserPrivilegesModel.setGenerateResults(generateResults);
                UserPrivilegesModel.setRegisterCourses(registerCourses);
                UserPrivilegesModel.setUpdateAssignment(updateAssignment);
                UserPrivilegesModel.setUpdateExam(updateExam);
                UserPrivilegesModel.setUpdateCourse(updateCourse);
                UserPrivilegesModel.setUpdateLecture(updateLecture);
                UserPrivilegesModel.setViewLectures(viewLectures);
                
                
                
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
